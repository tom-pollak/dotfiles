[
  // toggle editors
  {
    "key": "ctrl+6",
    "command": "-workbench.action.openEditorAtIndex6"
  },
  {
    "key": "ctrl+6",
    "command": "runCommands",
    "args": {
      "commands": [
        {
          "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
        },
        {
          "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
        },
        {
          "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
        },
      ]
    }
  },
  // CMD+J Macro
  {
    "key": "ctrl+u",
    "command": "runCommands",
    "args": {
      "commands": [
        {
          "command": "editorScroll",
          "args": {
            "to": "up",
            "by": "halfPage"
          }
        },
        {
          "command": "cursorMove",
          "args": {
            "to": "viewPortCenter"
          }
        }
      ]
    }
  },
  {
    "key": "ctrl+d",
    "command": "runCommands",
    "args": {
      "commands": [
        {
          "command": "editorScroll",
          "args": {
            "to": "down",
            "by": "halfPage"
          }
        },
        {
          "command": "cursorMove",
          "args": {
            "to": "viewPortCenter"
          }
        }
      ]
    }
  },
  {
    // hide panes
    "key": "cmd+j",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.focusActiveEditorGroup",
        "workbench.action.closePanel",
        "workbench.action.closeSidebar",
        "aichat.close-sidebar",
      ]
    }
  },
  {
    "key": "escape",
    "command": "workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "escape",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "escape",
    "command": "list.toggleKeyboardNavigation",
    "when": "inputFocus && listFocus && listSupportsKeyboardNavigation && !notebookCellListFocused &&!findWidgetFocus"
  },
  // {
  //   "key": "escape",
  //   "command": "workbench.action.closeAuxiliaryBar",
  //   "when": "auxiliaryBarVisible",
  // },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "ctrl+q",
    "command": "workbench.action.switchWindow"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenPreviousEditor"
  },
  {
    "key": "cmd+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "cmd+8 m",
    "command": "workbench.action.moveEditorToNewWindow"
  },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "cmd+e",
    "command": "workbench.view.explorer",
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletVisible"
  },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "cmd+g",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "view.workbench.scm.visible"
  },
  {
    "key": "cmd+shift+g",
    "command": "workbench.view.extension.gitlensInspect",
    "when": "workbench.scm.active"
  },
  //////////////////////////////////////////////////////////////////////////////
  // COPILOT
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "cmd+d",
    "command": "workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "cmd+d",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "workbench.debug.variablesView.visible || view.workbench.debug.welcome.visible"
  },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "cmd+/",
    "command": "workbench.view.extension.todo-tree-container",
    // "when": "viewContainer.workbench.view.todo-tree.enabled"
  },
  {
    "key": "cmd+/",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "workbench.view.extension.todo-tree-container.defaultViewContainerLocation"
  },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "cmd+r",
    "command": "workbench.view.extension.references-view"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "workbench.view.extension.references-view.defaultViewContainerLocation"
  },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "cmd+'",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "cmd+u",
    "command": "workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "cmd+shift+f",
    "command": "workbench.action.findInFiles",
  },
  // {
  //   "key": "cmd+shift+f",
  //   "command": "workbench.action.toggleSidebarVisibility",
  // },
  {
    "key": "ctrl+8",
    "command": "workbench.action.quickTextSearch"
  },
  //////////////////////////////////////////////////////////////////////////////
  // DEBUG
  {
    "key": "shift+cmd+enter",
    "command": "jupyter.debugcurrentcell.palette"
  },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "cmd+t",
    "command": "workbench.view.extension.test"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "sideBarFocus && view.workbench.view.testing.visible"
  },
  //////////////////////////////////////////////////////////////////////////////
  // NEW FILE/TERM
  {
    "key": "cmd+n",
    "command": "workbench.action.files.newUntitledFile",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "cmd+;",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "cmd+.",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "cmd+b",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "cmd+s",
    "command": "checkpoints.addCheckpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+0",
    "command": "workbench.action.zoomReset"
  },
  //////////////////////////////////////////////////////////////////////////////
  // CMD+k Modifier
  {
    "key": "cmd+8 r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "cmd+8 x",
    "command": "gitlens.closeUnchangedFiles"
  },
  {
    "key": "cmd+8 shift+m",
    "command": "fileutils.moveFile"
  },
  {
    "key": "cmd+8 f",
    "command": "workbench.action.toggleFullScreen",
  },
  {
    "key": "cmd+8 n",
    "command": "notifications.clearAll"
  },
  {
    "key": "cmd+8 s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "cmd+8 d",
    "command": "workbench.action.debug.selectandstart"
  },
  {
    "key": "cmd+8 t",
    "command": "workbench.action.tasks.runTask"
  },
  // GIT
  {
    "key": "cmd+8 /",
    "command": "gitlens.gitCommands",
    "when": "!gitlens:disabled"
  },
  {
    "key": "cmd+8 .",
    "command": "git.stageSelectedRanges",
    "when": "!operationInProgress"
  },
  {
    "key": "cmd+8 ,",
    "command": "git.unstageSelectedRanges",
    "when": "!operationInProgress"
  },
  // SWITCH SOURCE/HEADER
  {
    "key": "cmd+8 o",
    "command": "nbdev.navNotebook",
    "when": "editorTextFocus && editorLangId == 'python'"
  },
  {
    "key": "cmd+8 o",
    "command": "clangd.switchheadersource",
    "when": "editorTextFocus"
  },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "ctrl+o",
    "command": "workbench.action.navigateBack",
    "when": "!editorTextFocus"
  },
  {
    "key": "ctrl+i",
    "command": "workbench.action.navigateForward",
    "when": "!editorTextFocus"
  },
  //////////////////////////////////////////////////////////////////////////////
  // JUPYTER
  {
    "key": "shift+enter",
    "command": "jupyter.runByLineStop",
    "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'"
  },
  {
    "key": "ctrl+enter",
    "command": "jupyter.runcurrentcell",
    "when": "isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells"
  },
  {
    "key": "cmd+enter",
    "command": "jupyter.runcurrentcell",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
  },
  {
    "key": "i",
    "command": "notebook.centerActiveCell",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "cmd+enter",
    "command": "notebook.cell.execute",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "key": "shift+p",
    "command": "notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "p",
    "command": "notebook.cell.paste",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "h",
    "command": "notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "l",
    "command": "notebook.unfold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "o",
    "command": "notebook.cell.toggleOutputs",
    "when": "notebookEditorFocused && !editorTextFocus && !inputFocus"
  },
  {
    "key": "shift+o",
    "command": "notebook.cell.toggleOutputScrolling",
    "when": "notebookEditorFocused && !editorTextFocus && !inputFocus"
  },
  {
    "key": "y y",
    "command": "notebook.cell.copy",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "c",
    "command": "notebook.cell.changeToCode",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
  },
  {
    "key": "q a",
    "command": "jupyter.runallcellsabove",
    "when": "notebookEditorFocused && !editorTextFocus && !inputFocus"
  },
  {
    "key": "q b",
    "command": "jupyter.runcellandallbelow",
    "when": "notebookEditorFocused && !editorTextFocus && !inputFocus"
  },
  {
    "key": "q r",
    "command": "jupyter.restartkernel",
    "when": "notebookEditorFocused && !editorTextFocus && !inputFocu"
  },
  {
    "key": "q d",
    "command": "jupyter.restartkernelandrunallcells",
    "when": "notebookEditorFocused && !editorTextFocus && !inputFocus"
  },
  {
    "key": "q o",
    "command": "jupyter.interactive.clearAllCells",
    "when": "notebookEditorFocused && !editorTextFocus && !inputFocus"
  },
  {
    "key": "q j",
    "command": "notebook.revealLastFailedCell",
    "when": "notebookEditorFocused && !editorTextFocus && !inputFocus"
  },
  {
    "key": "space w",
    "command": "workbench.action.files.save",
    "when": "notebookEditorFocused && !editorTextFocus && !inputFocus"
  },
  //////////////////////////////////////////////////////////////////////////////
  // COPILOT
  {
    "key": "ctrl+l",
    "command": "editor.action.inlineSuggest.trigger",
    "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible && neovim.mode == 'insert'"
  },
  // Complete suggestion
  {
    "key": "ctrl+l",
    "command": "editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus && neovim.mode == 'insert'"
  },
  // Toggle between suggestions
  {
    "key": "ctrl+.",
    "command": "editor.action.inlineSuggest.showNext",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "ctrl+,",
    "command": "editor.action.inlineSuggest.showPrevious",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "cmd+a",
    "command": "workbench.panel.chat.view.copilot.focus"
  },
  //////////////////////////////////////////////////////////////////////////////
  // PARAMETER HINTS
  {
    "key": "ctrl+]",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+]",
    "command": "closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  //////////////////////////////////////////////////////////////////////////////
  // Cancel autocomplete
  {
    "key": "ctrl+e",
    "command": "cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "ctrl+g",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  // Trigger autocomplete
  {
    "key": "ctrl+f",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus && neovim.mode == 'insert'"
  },
  {
    "key": "ctrl+f",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible && neovim.mode == 'insert'"
  },
  {
    "key": "ctrl+f",
    "command": "focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion && neovim.mode == 'insert'"
  },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "ctrl+right",
    "command": "cursorWordEndRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+left",
    "command": "cursorWordLeft",
    "when": "textInputFocus"
  },
  //////////////////////////////////////////////////////////////////////////////
  // TERMINAL
  {
    "key": "ctrl+w",
    "command": "deleteWordPartLeft",
    "when": "terminalFocus"
  },
  //////////////////////////////////////////////////////////////////////////////
  // PATH
  {
    "key": "cmd+8 b",
    "command": "copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "cmd+8 alt+cmd+c",
    "command": "copyFilePath",
    "when": "editorFocus"
  },
  {
    "key": "cmd+8 shift+b",
    "command": "copyRelativeFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "cmd+8 shift+alt+cmd+c",
    "command": "copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "cmd+8 b",
    "command": "search.action.copyPath",
    "when": "fileMatchOrFolderMatchWithResourceFocus"
  },
  {
    "key": "ctrl+u",
    "command": "-vscode-neovim.ctrl-u",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  {
    "key": "ctrl+d",
    "command": "-vscode-neovim.ctrl-d",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  {
    "key": "ctrl+d",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'",
    "args": "<C-d>"
  },
  {
    "key": "ctrl+u",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'",
    "args": "<C-u>"
  },
  //////////////////////////////////////////////////////////////////////////////
  // Ctrl j,k,h,l
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "!inQuickOpen && !suggestWidgetVisible && neovim.mode != 'insert'"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "!inQuickOpen && !suggestWidgetVisible && neovim.mode != 'insert'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.statusBar.focusNext",
    "when": "statusBarFocused"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.banner.focusNextAction",
    "when": "bannerFocused"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+j",
    "command": "scm.viewNextCommit",
    "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
  },
  {
    "key": "alt+down",
    "command": "interactive.history.next",
    "when": "!inDebugMode"
  },
  {
    "key": "ctrl+j",
    "command": "notifications.focusNextToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+j",
    "command": "breadcrumbs.selectFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "ctrl+j",
    "command": "history.showNext",
    "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.statusBar.focusPrevious",
    "when": "statusBarFocused"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.banner.focusPreviousAction",
    "when": "bannerFocused"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+k",
    "command": "scm.viewPreviousCommit",
    "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "notifications.focusPreviousToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "alt+up",
    "command": "interactive.history.previous",
    "when": "!inDebugMode"
  },
  {
    "key": "ctrl+k",
    "command": "history.showPrevious",
    "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+j",
    "command": "problems.action.focusProblemsFromFilter",
    "when": "problemsFilterFocus"
  },
  {
    "key": "ctrl+j",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+j",
    "command": "explorer.openAndPassFocus",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  },
  //////////////////////////////////////////////////////////////////////////////
  {
    "key": "cmd+]",
    "command": "workbench.action.debug.nextConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.previousEditor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.debug.prevConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.nextEditor",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  //////////////////////////////////////////////////////////////////////////////
  // Interactive
  {
    "key": "ctrl+c",
    "command": "interactive.input.clear",
    "when": "!LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !isComposing && !markersNavigationVisible && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "alt+down",
    "command": "interactive.history.next",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "key": "alt+up",
    "command": "interactive.history.previous",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
  },
  {
    "key": "cmd+8 h",
    "command": "interactive.history.focus"
  },
  {
    "key": "cmd+8 shift+h",
    "command": "interactive.input.focus"
  },
  //////////////////////////////////////////////////////////////////////////////
  // Folds
  {
    "key": "cmd+8 -",
    "command": "editor.gotoParentFold"
  },
  {
    "key": "cmd+8 [",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+]",
    "command": "editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  //////////////////////////////////////////////////////////////////////////////
  // NEOVIM
  {
    "key": "cmd+8 ;",
    "command": "vscode-neovim.restart"
  },
  //////////////////////////////////////////////////////////////////////////////
  // Unmaps
  {
    "key": "ctrl+k",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "-extension.vim_ctrl+k",
    "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
  },
  {
    "key": "ctrl+j",
    "command": "-editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "-extension.vim_ctrl+j",
    "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
  },
  {
    "key": "ctrl+p",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "cmd+a",
    "command": "-editor.action.selectAll"
  },
  {
    "key": "cmd+a",
    "command": "-workbench.action.terminal.selectAll",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+a",
    "command": "-extension.vim_cmd+a",
    "when": "editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "-extension.vim_ctrl+n",
    "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+n",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-extension.vim_ctrl+p",
    "when": "suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "alt+enter",
    "command": "-notebook.cell.executeAndInsertBelow",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
  },
  {
    "key": "alt+enter",
    "command": "-debug.openBreakpointToSide",
    "when": "breakpointsFocused"
  },
  {
    "key": "alt+enter",
    "command": "-editor.action.selectAllMatches",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "alt+enter",
    "command": "-jupyter.runcurrentcellandaddbelow",
    "when": "editorTextFocus && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
  },
  {
    "key": "alt+enter",
    "command": "-testing.editFocusedTest",
    "when": "focusedView == 'workbench.view.testing'"
  },
  {
    "key": "cmd+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+.",
    "command": "-problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "ctrl+e",
    "command": "-cursorLineEnd",
    "when": "textInputFocus"
  },
  {
    "key": "escape",
    "command": "-editor.action.cancelSelectionAnchor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "escape",
    "command": "-cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "escape",
    "command": "-editor.action.inlineSuggest.hide",
    "when": "inlineSuggestionVisible"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "cmd+g",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "cmd+g",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "cmd+e",
    "command": "-actions.findWithSelection"
  },
  {
    "key": "cmd+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "tab",
    "command": "-markdown.extension.onTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "ctrl+alt+cmd+n",
    "command": "-welcome.showNewFileEntries"
  },
  {
    "key": "cmd+a",
    "command": "-list.selectAll",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "shift+cmd+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "ctrl+o",
    "command": "-extension.vim_ctrl+o",
    "when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"
  },
  {
    "key": "ctrl+o",
    "command": "-lineBreakInsert",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+i",
    "command": "-extension.vim_ctrl+i",
    "when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "alt+enter",
    "command": "-latex-workshop.onAltEnterKey",
    "when": "config.latex-workshop.bind.enter.key && editorTextFocus && !acceptSuggestionOnEnter && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^rsweave$|^jlweave$/"
  },
  {
    "key": "alt+enter",
    "command": "-latex-workshop.onAltEnterKey",
    "when": "acceptSuggestionOnEnter && config.latex-workshop.bind.enter.key && editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^latex$|^latex-expl3$|^rsweave$|^jlweave$/"
  },
  {
    "key": "alt+enter", // #1e2228
    "command": "-notebook.cell.executeAndInsertBelow",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "key": "cmd+k s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "cmd+k alt+cmd+s",
    "command": "-git.stageSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "cmd+k cmd+n",
    "command": "-git.unstageSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "cmd+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "cmd+k cmd+r",
    "command": "-git.revertSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "alt+h",
    "command": "-git.viewFileHistory"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "alt+cmd+g /",
    "command": "-gitlens.gitCommands",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "cmd+k u",
    "command": "-workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "cmd+k c",
    "command": "-workbench.files.action.compareWithClipboard"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  },
  {
    "key": "cmd+k",
    "command": "-workbench.action.terminal.clear",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "cmd+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+m",
    "command": "-markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "cmd+]",
    "command": "-markdown.extension.onIndentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.debug.nextConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "cmd+[",
    "command": "-markdown.extension.onOutdentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "cmd+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.debug.prevConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "shift+cmd+u",
    "command": "-workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.view.search",
    "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
  },
  {
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "key": "ctrl+d",
    "command": "-deleteRight",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "escape",
    "command": "-list.toggleKeyboardNavigation",
    "when": "inputFocus && listFocus && listSupportsKeyboardNavigation && !notebookCellListFocused"
  },
  {
    "key": "cmd+.",
    "command": "-acceptSelectedCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "cmd+.",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "cmd+numpad0",
    "command": "-workbench.action.zoomReset"
  },
  {
    "key": "alt+/",
    "command": "-gitlens.gitCommands",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+i",
    "command": "-emojisense.quickEmoji",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+i",
    "command": "-emojisense.quickEmojiTerminal",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+i",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+e cmd+e",
    "command": "-workbench.action.quickOpen",
    "when": "editorHasSelection) || !(editorTextFocus && !config.sqltools.disableChordKeybindings"
  },
  {
    "key": "cmd+k f",
    "command": "-workbench.action.closeFolder",
    "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
  },
  {
    "key": "ctrl+cmd+f",
    "command": "-workbench.action.toggleFullScreen",
    "when": "!isIOS"
  },
  {
    "key": "cmd+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "ctrl+alt+s",
    "command": "-checkpoints.addCheckpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+backspace",
    "command": "-deleteWordLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+enter",
    "command": "-jupyter.runByLineStop",
    "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'"
  },
  {
    "key": "ctrl+enter",
    "command": "-jupyter.runcurrentcell",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
  },
  {
    "key": "ctrl+l",
    "command": "-notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  {
    "key": "alt+\\",
    "command": "-editor.action.inlineSuggest.trigger",
    "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
  },
  {
    "key": "tab",
    "command": "-editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
  },
  {
    "key": "cmd+right",
    "command": "-editor.action.inlineSuggest.acceptNextWord",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "alt+[",
    "command": "-editor.action.inlineSuggest.showPrevious",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated"
  },
  {
    "key": "ctrl+n",
    "command": "-showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+p",
    "command": "-showPrevParameterHint",
    "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "shift+cmd+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "up",
    "command": "-showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+n",
    "command": "-showNextParameterHint",
    "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "down",
    "command": "-showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "shift+escape",
    "command": "-closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "alt+right",
    "command": "-cursorWordEndRight",
    "when": "textInputFocus"
  },
  {
    "key": "alt+left",
    "command": "-cursorWordLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "ctrl+p",
    "command": "-cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "escape",
    "command": "-interactive.input.clear",
    "when": "!LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !isComposing && !markersNavigationVisible && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible && resourceScheme == 'vscode-interactive'"
  },
  {
    "key": "alt+cmd+p",
    "command": "-projectManager.listProjects"
  },
  {
    "key": "cmd+k o",
    "command": "-workbench.action.files.showOpenedFileInNewWindow",
    "when": "emptyWorkspaceSupport"
  },
  {
    "key": "alt+o",
    "command": "-C_Cpp.SwitchHeaderSource",
    "when": "editorTextFocus && editorLangId == 'c' || editorTextFocus && editorLangId == 'cpp' || editorTextFocus && editorLangId == 'cuda-cpp'"
  },
  {
    "key": "f2",
    "command": "-nbdev.navNotebook",
    "when": "editorTextFocus && editorLangId == 'python'"
  },
  {
    "key": "ctrl+cmd+i",
    "command": "-workbench.panel.chatSidebar.copilot"
  },
  {
    "key": "o",
    "command": "-notebook.cell.toggleOutputs",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "cmd+k y",
    "command": "-notebook.cell.toggleOutputScrolling",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
  },
  {
    "key": "c",
    "command": "-notebook.cell.copy",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "y",
    "command": "-notebook.cell.changeToCode",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
  },
  {
    "key": "cmd+k d",
    "command": "-workbench.files.action.compareWithSaved"
  },
  {
    "key": "cmd+k t",
    "command": "-notebook.cell.collapseCellOutput",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "key": "cmd+k t",
    "command": "-notebook.cell.expandCellOutput",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "key": "cmd+k m",
    "command": "-workbench.action.editor.changeLanguageMode",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "cmd+k alt+cmd+s",
    "command": "-git.stageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+k cmd+n",
    "command": "-git.unstageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "alt+cmd+o",
    "command": "-clangd.switchheadersource",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "-copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "cmd+k alt+cmd+c",
    "command": "-copyFilePath",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+cmd+c",
    "command": "-copyRelativeFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "cmd+k shift+alt+cmd+c",
    "command": "-copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "-search.action.copyPath",
    "when": "fileMatchOrFolderMatchWithResourceFocus"
  },
  {
    "key": "cmd+k p",
    "command": "-workbench.action.files.copyPathOfActiveFile"
  },
  {
    "key": "shift+cmd+i",
    "command": "-chat.action.askQuickQuestion",
    "when": "hasChatProvider"
  },
  {
    "key": "alt+x ctrl+g",
    "command": "-magit.dispatch"
  },
  {
    "key": "alt+x alt+g",
    "command": "-magit.file-popup",
    "when": "activeEditor"
  },
  {
    "key": "alt+x g",
    "command": "-magit.status"
  },
  {
    "key": "escape",
    "command": "-interactive.input.clear",
    "when": "!LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !isComposing && !markersNavigationVisible && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "cmd+e",
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "cmd+e q",
    "command": "-sqltools.bookmarkSelection",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings"
  },
  {
    "key": "cmd+e cmd+r",
    "command": "-sqltools.deleteBookmark",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "cmd+e cmd+a",
    "command": "-sqltools.runFromBookmarks",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "cmd+e cmd+d",
    "command": "-sqltools.describeTable",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "cmd+e cmd+e",
    "command": "-sqltools.executeQuery",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings"
  },
  {
    "key": "cmd+e cmd+s",
    "command": "-sqltools.showRecords",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "cmd+e cmd+h",
    "command": "-sqltools.runFromHistory",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "cmd+e cmd+b",
    "command": "-sqltools.formatSql",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings && !editorReadonly"
  },
  {
    "key": "alt+cmd+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+]",
    "command": "-editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+u",
    "command": "-vscode-neovim.ctrl-u",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.u && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+d",
    "command": "-vscode-neovim.ctrl-d",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.d && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+b",
    "command": "-cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+k r",
    "command": "-workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "cmd+k shift+enter",
    "command": "-workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "cmd+k shift+enter",
    "command": "-workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "cmd+a",
    "command": "-workbench.action.terminal.selectAll",
    "when": "terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "ctrl+f",
    "command": "-cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-editor.action.pageDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "shift+l",
    "command": "-notebook.toggleLineNumbers",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "l",
    "command": "-notebook.cell.toggleLineNumbers",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "ctrl+cmd+i",
    "command": "-workbench.action.chat.open",
    "when": "hasChatProvider"
  },
  {
    "key": "ctrl+8",
    "command": "-workbench.action.openEditorAtIndex8"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "down",
    "command": "-interactive.history.next",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "key": "up",
    "command": "-interactive.history.previous",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-jupyter.runAndDebugCell",
    "when": "isWorkspaceTrusted && jupyter.ispythonnotebook && !notebookKernel && notebookCellType == 'code' || isWorkspaceTrusted && jupyter.ispythonnotebook && notebookCellType == 'code' && notebookKernel =~ /^ms-toolsai.jupyter\\// && resource not in 'jupyter.notebookeditor.debugDocuments'"
  },
  {
    "key": "ctrl+enter",
    "command": "interactive.execute",
    "when": "activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "cmd+enter",
    "command": "-interactive.execute",
    "when": "activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "shift+cmd+y",
    "command": "inspect.showLogview",
    "when": "workspaceFolderCount != '0'"
  },
  {
    "key": "shift+cmd+l",
    "command": "-inspect.showLogview",
    "when": "workspaceFolderCount != '0'"
  },
  {
    "key": "ctrl+j",
    "command": "notebook.focusNextEditor",
    "when": "editorTextFocus && notebookEditorFocused && neovim.mode != 'insert'"
  },
  {
    "key": "ctrl+k",
    "command": "notebook.focusPreviousEditor",
    "when": "editorTextFocus && notebookEditorFocused && neovim.mode != 'insert'"
  },
  {
    "key": "escape",
    "command": "-gitlens.key.escape",
    "when": "editorTextFocus && gitlens:key:escape && !codeActionMenuVisible && !findWidgetVisible && !isInEmbeddedEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "sideBarFocus && focusedView == 'workbench.scm'"
  },
  {
    "key": "shift+cmd+f",
    "command": "workbench.view.search"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.keychord.leader",
    "when": "false"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.keychord.leader",
    "when": "false"
  },
  {
    "key": "cmd+8 cmd+c",
    "command": "editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+r cmd+c",
    "command": "-editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+8 cmd+f",
    "command": "editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+r cmd+f",
    "command": "-editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+8 cmd+d",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+r cmd+d",
    "command": "-editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+8 alt+cmd+down",
    "command": "editor.action.nextCommentingRange",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "key": "cmd+r alt+cmd+down",
    "command": "-editor.action.nextCommentingRange",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "key": "cmd+8 alt+cmd+up",
    "command": "editor.action.previousCommentingRange",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "key": "cmd+r alt+cmd+up",
    "command": "-editor.action.previousCommentingRange",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "key": "cmd+8 cmd+u",
    "command": "editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+r cmd+u",
    "command": "-editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+8 f12",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+r f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+8 cmd+f12",
    "command": "editor.action.revealDefinitionAside",
    "when": "false"
  },
  {
    "key": "cmd+r cmd+f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+8 cmd+k",
    "command": "editor.action.selectFromAnchorToCursor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "cmd+r cmd+k",
    "command": "-editor.action.selectFromAnchorToCursor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "cmd+8 cmd+b",
    "command": "editor.action.setSelectionAnchor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+r cmd+b",
    "command": "-editor.action.setSelectionAnchor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+8 cmd+i",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+r cmd+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+8 cmd+x",
    "command": "editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+r cmd+x",
    "command": "-editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+8 cmd+,",
    "command": "editor.createFoldingRangeFromSelection",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+,",
    "command": "-editor.createFoldingRangeFromSelection",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+i",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "cmd+r cmd+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "cmd+8 cmd+0",
    "command": "editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+0",
    "command": "-editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+/",
    "command": "editor.foldAllBlockComments",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+/",
    "command": "-editor.foldAllBlockComments",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+-",
    "command": "editor.foldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+-",
    "command": "-editor.foldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+8",
    "command": "editor.foldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+8",
    "command": "-editor.foldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+1",
    "command": "editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+1",
    "command": "-editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+2",
    "command": "editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+2",
    "command": "-editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+3",
    "command": "editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+3",
    "command": "-editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+4",
    "command": "editor.foldLevel4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+4",
    "command": "-editor.foldLevel4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+5",
    "command": "editor.foldLevel5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+5",
    "command": "-editor.foldLevel5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+6",
    "command": "editor.foldLevel6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+6",
    "command": "-editor.foldLevel6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+7",
    "command": "editor.foldLevel7",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+7",
    "command": "-editor.foldLevel7",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+[",
    "command": "editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+[",
    "command": "-editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+.",
    "command": "editor.removeManualFoldingRanges",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+.",
    "command": "-editor.removeManualFoldingRanges",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+l",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+l",
    "command": "-editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 shift+cmd+l",
    "command": "editor.toggleFoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r shift+cmd+l",
    "command": "-editor.toggleFoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+j",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+=",
    "command": "editor.unfoldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+=",
    "command": "-editor.unfoldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 cmd+9",
    "command": "editor.unfoldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+9",
    "command": "-editor.unfoldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+]",
    "command": "-editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+8 f2",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "cmd+r f2",
    "command": "-togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "cmd+8 alt+cmd+c",
    "command": "workbench.action.addComment",
    "when": "activeCursorHasCommentingRange"
  },
  {
    "key": "cmd+r alt+cmd+c",
    "command": "-workbench.action.addComment",
    "when": "activeCursorHasCommentingRange"
  },
  {
    "key": "cmd+8 cmd+g",
    "command": "aiFeedback.action.open"
  },
  {
    "key": "cmd+r cmd+g",
    "command": "-aiFeedback.action.open"
  },
  {
    "key": "cmd+r alt+cmd+c",
    "command": "-copyFilePath",
    "when": "editorFocus"
  },
  {
    "key": "cmd+r shift+alt+cmd+c",
    "command": "-copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "cmd+8 cmd+k",
    "command": "editor.action.defineKeybinding",
    "when": "resource == 'vscode-userdata:/Users/tom/Library/Application%20Support/Cursor/User/keybindings.json'"
  },
  {
    "key": "cmd+r cmd+k",
    "command": "-editor.action.defineKeybinding",
    "when": "resource == 'vscode-userdata:/Users/tom/Library/Application%20Support/Cursor/User/keybindings.json'"
  },
  {
    "key": "cmd+8 cmd+a",
    "command": "keybindings.editor.addKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "cmd+r cmd+a",
    "command": "-keybindings.editor.addKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "cmd+8 cmd+e",
    "command": "keybindings.editor.defineWhenExpression",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "cmd+r cmd+e",
    "command": "-keybindings.editor.defineWhenExpression",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "cmd+8 cmd+i",
    "command": "list.showHover",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "cmd+r cmd+i",
    "command": "-list.showHover",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "cmd+8 i",
    "command": "notebook.cell.chat.start",
    "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "cmd+r i",
    "command": "-notebook.cell.chat.start",
    "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "cmd+8 cmd+c",
    "command": "notebook.cell.collapseCellInput",
    "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
  },
  {
    "key": "cmd+r cmd+c",
    "command": "-notebook.cell.collapseCellInput",
    "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
  },
  {
    "key": "cmd+8 t",
    "command": "notebook.cell.collapseCellOutput",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "key": "cmd+r t",
    "command": "-notebook.cell.collapseCellOutput",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "key": "cmd+8 cmd+c",
    "command": "notebook.cell.expandCellInput",
    "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
  },
  {
    "key": "cmd+r cmd+c",
    "command": "-notebook.cell.expandCellInput",
    "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
  },
  {
    "key": "cmd+8 t",
    "command": "notebook.cell.expandCellOutput",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "key": "cmd+r t",
    "command": "-notebook.cell.expandCellOutput",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "key": "cmd+8 shift+cmd+\\",
    "command": "notebook.cell.split",
    "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
  {
    "key": "cmd+r shift+cmd+\\",
    "command": "-notebook.cell.split",
    "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
  {
    "key": "cmd+8 y",
    "command": "notebook.cell.toggleOutputScrolling",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
  },
  {
    "key": "cmd+r y",
    "command": "-notebook.cell.toggleOutputScrolling",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
  },
  {
    "key": "cmd+8 shift+cmd+n",
    "command": "notifications.showList"
  },
  {
    "key": "cmd+r shift+cmd+n",
    "command": "-notifications.showList"
  },
  {
    "key": "cmd+8 cmd+w",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "cmd+r cmd+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "cmd+8 shift+cmd+w",
    "command": "workbench.action.closeAllGroups"
  },
  {
    "key": "cmd+r shift+cmd+w",
    "command": "-workbench.action.closeAllGroups"
  },
  {
    "key": "cmd+8 w",
    "command": "workbench.action.closeEditorsInGroup"
  },
  {
    "key": "cmd+r w",
    "command": "-workbench.action.closeEditorsInGroup"
  },
  {
    "key": "cmd+r f",
    "command": "-workbench.action.closeFolder",
    "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
  },
  {
    "key": "cmd+8 u",
    "command": "workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "cmd+r u",
    "command": "-workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "cmd+8 shift+o",
    "command": "workbench.action.compareEditor.openSide",
    "when": "inDiffEditor"
  },
  {
    "key": "cmd+r shift+o",
    "command": "-workbench.action.compareEditor.openSide",
    "when": "inDiffEditor"
  },
  {
    "key": "cmd+8 o",
    "command": "workbench.action.copyEditorToNewWindow",
    "when": "activeEditor"
  },
  {
    "key": "cmd+r o",
    "command": "-workbench.action.copyEditorToNewWindow",
    "when": "activeEditor"
  },
  {
    "key": "cmd+8 m",
    "command": "workbench.action.editor.changeLanguageMode",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "cmd+r m",
    "command": "-workbench.action.editor.changeLanguageMode",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "cmd+8 p",
    "command": "workbench.action.files.copyPathOfActiveFile"
  },
  {
    "key": "cmd+r p",
    "command": "-workbench.action.files.copyPathOfActiveFile"
  },
  {
    "key": "cmd+r r",
    "command": "-workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "cmd+8 s",
    "command": "workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "cmd+r s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "cmd+8 cmd+up",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "cmd+r cmd+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "cmd+8 cmd+down",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "cmd+r cmd+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "cmd+8 cmd+left",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "cmd+r cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "cmd+8 cmd+right",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+r cmd+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+8 shift+cmd+\\",
    "command": "workbench.action.joinEditorInGroup",
    "when": "sideBySideEditorActive"
  },
  {
    "key": "cmd+r shift+cmd+\\",
    "command": "-workbench.action.joinEditorInGroup",
    "when": "sideBySideEditorActive"
  },
  {
    "key": "cmd+8 enter",
    "command": "workbench.action.keepEditor"
  },
  {
    "key": "cmd+r enter",
    "command": "-workbench.action.keepEditor"
  },
  {
    "key": "cmd+8 down",
    "command": "workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "cmd+r down",
    "command": "-workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "cmd+8 left",
    "command": "workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "cmd+r left",
    "command": "-workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "cmd+8 right",
    "command": "workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "cmd+r right",
    "command": "-workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "cmd+8 up",
    "command": "workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "cmd+r up",
    "command": "-workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "cmd+8 shift+cmd+left",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "cmd+r shift+cmd+left",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "cmd+8 shift+cmd+right",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "cmd+r shift+cmd+right",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "cmd+8 cmd+q",
    "command": "workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "cmd+r cmd+q",
    "command": "-workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "cmd+8 alt+cmd+right",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "cmd+r alt+cmd+right",
    "command": "-workbench.action.nextEditorInGroup"
  },
  {
    "key": "cmd+8 cmd+s",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "cmd+r cmd+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "cmd+8 shift+enter",
    "command": "workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "cmd+r shift+enter",
    "command": "-workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "cmd+8 alt+cmd+left",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "cmd+r alt+cmd+left",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "cmd+8 cmd+t",
    "command": "workbench.action.selectTheme"
  },
  {
    "key": "cmd+r cmd+t",
    "command": "-workbench.action.selectTheme"
  },
  {
    "key": "cmd+8 cmd+\\",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "-workbench.action.splitEditorDown"
  },
  {
    "key": "cmd+8 shift+cmd+\\",
    "command": "workbench.action.splitEditorInGroup",
    "when": "activeEditorCanSplitInGroup"
  },
  {
    "key": "cmd+r shift+cmd+\\",
    "command": "-workbench.action.splitEditorInGroup",
    "when": "activeEditorCanSplitInGroup"
  },
  {
    "key": "cmd+8 cmd+\\",
    "command": "workbench.action.splitEditorLeft"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "-workbench.action.splitEditorLeft"
  },
  {
    "key": "cmd+8 cmd+\\",
    "command": "workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "-workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "cmd+8 cmd+\\",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "-workbench.action.splitEditorRight"
  },
  {
    "key": "cmd+8 cmd+\\",
    "command": "workbench.action.splitEditorUp"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "-workbench.action.splitEditorUp"
  },
  {
    "key": "cmd+8 cmd+i",
    "command": "workbench.action.terminal.focusHover",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "cmd+r cmd+i",
    "command": "-workbench.action.terminal.focusHover",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "cmd+8 cmd+m",
    "command": "workbench.action.toggleMaximizeEditorGroup",
    "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
  },
  {
    "key": "cmd+r cmd+m",
    "command": "-workbench.action.toggleMaximizeEditorGroup",
    "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
  },
  {
    "key": "cmd+8 z",
    "command": "workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "key": "cmd+r z",
    "command": "-workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "key": "cmd+8 shift+enter",
    "command": "workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "cmd+r shift+enter",
    "command": "-workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "cmd+8 c",
    "command": "workbench.files.action.compareWithClipboard"
  },
  {
    "key": "cmd+r c",
    "command": "-workbench.files.action.compareWithClipboard"
  },
  {
    "key": "cmd+r d",
    "command": "-workbench.files.action.compareWithSaved"
  },
  {
    "key": "cmd+8 e",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "cmd+r e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "cmd+8 down",
    "command": "views.moveViewDown",
    "when": "focusedView != ''"
  },
  {
    "key": "cmd+r down",
    "command": "-views.moveViewDown",
    "when": "focusedView != ''"
  },
  {
    "key": "cmd+8 left",
    "command": "views.moveViewLeft",
    "when": "focusedView != ''"
  },
  {
    "key": "cmd+r left",
    "command": "-views.moveViewLeft",
    "when": "focusedView != ''"
  },
  {
    "key": "cmd+8 right",
    "command": "views.moveViewRight",
    "when": "focusedView != ''"
  },
  {
    "key": "cmd+r right",
    "command": "-views.moveViewRight",
    "when": "focusedView != ''"
  },
  {
    "key": "cmd+8 up",
    "command": "views.moveViewUp",
    "when": "focusedView != ''"
  },
  {
    "key": "cmd+r up",
    "command": "-views.moveViewUp",
    "when": "focusedView != ''"
  },
  {
    "key": "cmd+8 v",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+k v",
    "command": "-markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+8 cmd+r",
    "command": "git.revertSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+k cmd+r",
    "command": "-git.revertSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+8 v",
    "command": "previewjs.start",
    "when": "previewjs.previewablesDetected"
  },
  {
    "key": "cmd+k v",
    "command": "-previewjs.start",
    "when": "previewjs.previewablesDetected"
  },
  {
    "key": "cmd+8 m",
    "command": "pr.makeSuggestion",
    "when": "commentEditorFocused"
  },
  {
    "key": "cmd+k m",
    "command": "-pr.makeSuggestion",
    "when": "commentEditorFocused"
  },
  {
    "key": "cmd+8 v",
    "command": "markdown.extension.closePreview",
    "when": "activeWebviewPanelId == 'markdown.preview'"
  },
  {
    "key": "cmd+k v",
    "command": "-markdown.extension.closePreview",
    "when": "activeWebviewPanelId == 'markdown.preview'"
  },
  {
    "key": "cmd+8 cmd+f",
    "command": "quarto.formatCell",
    "when": "editorTextFocus && !editorHasSelection && editorLangId == 'quarto'"
  },
  {
    "key": "cmd+k cmd+f",
    "command": "-quarto.formatCell",
    "when": "editorTextFocus && !editorHasSelection && editorLangId == 'quarto'"
  },
  {
    "key": "cmd+l cmd+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l alt+b",
    "command": "-latex-workshop.build",
    "when": "config.latex-workshop.bind.altKeymap.enabled && !virtualWorkspace && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l alt+c",
    "command": "-latex-workshop.clean",
    "when": "config.latex-workshop.bind.altKeymap.enabled && !virtualWorkspace && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l ]",
    "command": "-latex-workshop.demote-sectioning",
    "when": "config.latex-workshop.bind.altKeymap.enabled && editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l [",
    "command": "-latex-workshop.promote-sectioning",
    "when": "config.latex-workshop.bind.altKeymap.enabled && editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+w",
    "command": "-latex-workshop.surround",
    "when": "editorHasSelection && editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l alt+j",
    "command": "-latex-workshop.synctex",
    "when": "config.latex-workshop.bind.altKeymap.enabled && editorTextFocus && !virtualWorkspace && editorLangId =~ /^latex$|^latex-expl3$|^doctex$/"
  },
  {
    "key": "cmd+l alt+m",
    "command": "-latex-workshop.toggleMathPreviewPanel",
    "when": "config.latex-workshop.bind.altKeymap.enabled && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l alt+v",
    "command": "-latex-workshop.view",
    "when": "config.latex-workshop.bind.altKeymap.enabled && !virtualWorkspace && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+o",
    "command": "-extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+l cmd+c",
    "command": "-extension.liveServer.goOffline",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+l ctrl+shift+m",
    "command": "-editor.action.toggleTabFocusMode",
    "when": "textInputFocus && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l alt+x",
    "command": "-workbench.view.extension.latex-workshop-activitybar",
    "when": "config.latex-workshop.bind.altKeymap.enabled && viewContainer.workbench.view.extension.latex-workshop-activitybar.enabled"
  },
  {
    "key": "cmd+l cmd+e",
    "command": "-latex-workshop.shortcut.emph",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+enter",
    "command": "-latex-workshop.shortcut.item",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+b",
    "command": "-latex-workshop.shortcut.textbf",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+i",
    "command": "-latex-workshop.shortcut.textit",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+n",
    "command": "-latex-workshop.shortcut.textnormal",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+r",
    "command": "-latex-workshop.shortcut.textrm",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+c",
    "command": "-latex-workshop.shortcut.textsc",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+s",
    "command": "-latex-workshop.shortcut.textsl",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+-",
    "command": "-latex-workshop.shortcut.textsubscript",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+6",
    "command": "-latex-workshop.shortcut.textsuperscript",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+t",
    "command": "-latex-workshop.shortcut.texttt",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "cmd+l cmd+u",
    "command": "-latex-workshop.shortcut.underline",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "shift+cmd+j",
    "command": "lazygit-vscode.toggle"
  },
  {
    "key": "shift+cmd+l",
    "command": "-lazygit-vscode.toggle"
  },
  {
    "key": "ctrl+n",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+n",
    "command": "-cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-focusNextRenameSuggestion",
    "when": "renameInputVisible"
  },
  {
    "key": "ctrl+n",
    "command": "-list.focusDown",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "ctrl+n",
    "command": "-list.focusDown",
    "when": "inReferenceSearchEditor && neovim.mode == 'normal'"
  },
  {
    "key": "ctrl+n",
    "command": "-list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+l",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "tab",
    "command": "-acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "insertBestCompletion",
    "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "tab",
    "command": "-insertBestCompletion",
    "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "ctrl+l",
    "command": "insertNextSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "tab",
    "command": "-insertNextSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "ctrl+l",
    "command": "insertSnippet",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "key": "tab",
    "command": "-insertSnippet",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "key": "ctrl+l",
    "command": "jumpToNextSnippetPlaceholder",
    "when": "hasNextTabstop && inSnippetMode && textInputFocus"
  },
  {
    "key": "tab",
    "command": "-jumpToNextSnippetPlaceholder",
    "when": "hasNextTabstop && inSnippetMode && textInputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.terminal.acceptSelectedSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "tab",
    "command": "-workbench.action.terminal.acceptSelectedSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "editor.action.inlineSuggest.acceptNextWord",
    "when": "cppSuggestion && !editorReadonly || inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "cmd+right",
    "command": "-editor.action.inlineSuggest.acceptNextWord",
    "when": "cppSuggestion && !editorReadonly || inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "cmd+8 shift+;",
    "command": "python.analysis.restartLanguageServer"
  },
  {
    "key": "ctrl+m",
    "command": "cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+i",
    "command": "composerMode.agent"
  },
  {
    "key": "cmd+l",
    "command": "composerMode.chat"
  },
  {
    "key": "cmd+a",
    "command": "composerMode.edit"
  },
  {
    "key": "cmd+8 cmd+k",
    "command": "editor.action.defineKeybinding",
    "when": "resource == 'vscode-userdata:/Users/tomp/Library/Application%20Support/Cursor/User/keybindings.json'"
  },
  {
    "key": "cmd+r cmd+k",
    "command": "-editor.action.defineKeybinding",
    "when": "resource == 'vscode-userdata:/Users/tomp/Library/Application%20Support/Cursor/User/keybindings.json'"
  },
  {
    "key": "cmd+8 j",
    "command": "composer.showComposerHistory"
},
{
  "key": "shift+enter",
  "command": "-workbench.action.terminal.sendSequence",
  "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
},
{
  "key": "shift+cmd+e",
  "command": "composerMode.background"
},
]
